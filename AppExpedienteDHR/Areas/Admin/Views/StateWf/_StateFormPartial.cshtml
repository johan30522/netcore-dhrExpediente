@using AppExpedienteDHR.Core.ViewModels.Workflow
@model StateWfViewModel

@{
    ViewData["Title"] = Model.Id == 0 ? "Crear Estado" : "Editar Estado";
}

<h3 class="text-center">@ViewData["Title"]</h3>
<br />
<link rel="stylesheet" href="~/css/flow/stateForm.css">

<form id="stateForm" method="post"
      asp-action="Save">
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="FlowWfId" />
    <div class="d-flex justify-content-end align-items-center">
        <div class="form-group text-right mt-3">
            <button type="button" class="btn btn-primary" onclick="saveState()">Guardar</button>
            <button type="button" class="btn btn-secondary" onclick="clearForm()">Cancelar</button>
        </div>

    </div>

    <div class="form-group">
        <label asp-for="Order" class="control-label"></label>
        <input asp-for="Order" class="form-control" />
        <span asp-validation-for="Order" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Name" class="control-label"></label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="IsInitialState" class="control-label">Es estado inicial?</label>
        <div class="mb-3 form-check">
            <input asp-for="IsInitialState" class="form-check-input" id="isInitialStateCheckbox" />
            <label class="form-check-label" asp-for="IsInitialState">Si</label>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="IsFinalState" class="control-label">Es estado final??</label>
        <div class="mb-3 form-check">
            <input asp-for="IsFinalState" class="form-check-input" id="isFinalStateCheckbox" />
            <label class="form-check-label" asp-for="IsFinalState">Si</label>
        </div>
    </div>


    @* no se pueden crear acciones si es estado final, si esta selccionado  *@
    <div id="actionSections">

        @if (Model.Id > 0)
        {
            <hr />
            <div class="form-group">
                <div class="text-center">
                    <label for="Actions">Acciones</label>
                </div>
                <button type="button" class="btn btn-primary" onclick="loadActionForm(@Model.Id)"> <i class="fas fa-plus"></i> Crear</button>
                <div id="actionsTableContainer">
                    @await Html.PartialAsync("_ActionsTablePartial", Model.Actions)
                </div>
            </div>
        }

    </div>
    @if (Model.Id > 0)
    {
        <h3>Definión de Notificaciones</h3>
        <div id="notification-settings" class="container mt-4">
            <!-- Activar notificaciones -->
            <div class="form-check mb-3">
                <label>
                    <input class="form-check-input" asp-for="IsNotificationActive" type="checkbox" id="notifications-active" />
                    <label class="form-check-label" for="notifications-active">
                        Activar notificaciones
                    </label>
                </label>
            </div>


            <!-- Selección de grupos -->
            <div id="notification-group-selection" class="mb-3" style="display: none;">
                <label for="Notification-Groups">Notificar a estos Grupos:</label>
                <select id="Notification-Groups" name="StateNotification.SelectedGroupIds" class="form-control" multiple="multiple" style="width: 100%;">


                    @{
                        var stateNotification = Model.StateNotification;
                        var groups = stateNotification?.Groups;
                    }

                    @if (groups == null || !groups.Any())
                    {
                    }
                    else
                    {
                        @foreach (var group in groups)
                        {
                            var isSelected = stateNotification?.SelectedGroupIds?.Contains(group.Id) == true ? "selected" : null;
                            <option value="@group.Id" selected="@isSelected">
                                @group.Name
                            </option>
                        }
                    }
                </select>
            </div>

            <!-- Ingreso de destinatarios -->
            <div id="recipient-emails" class="mb-3" style="display:none;">
                <label class="form-label">Notificar a estos Correos:</label>
                <div id="email-list" class="d-flex flex-wrap gap-2 mb-2"></div>
                <!-- Campo oculto para almacenar correos vinculados al modelo -->
                <input type="hidden" asp-for="StateNotification.To" id="toEmailsHidden" />
                <input type="text" class="form-control" id="email-input" placeholder="Agregar correo y presiona Enter" />
            </div>

            <!-- Selección de plantilla -->
            <div id="email-template-selection" class="mb-3" style="display:none;">
                <label for="email-template" class="form-label">Plantilla de correo:</label>
                <select asp-for="StateNotification.EmailTemplateId" id="email-template" class="form-select"
                        data-selected-value="@Model.StateNotification.EmailTemplateId">
                    <option value="">Seleccionar plantilla</option>
                </select>
            </div>
        </div>
    }


   


</form>


<!-- Modal para crear/editar acciones -->
<div class="modal fade" id="actionModal" tabindex="-1" aria-labelledby="actionModalLabel" aria-hidden="true" data-bs-backdrop="static">
    <div class="modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-footer d-flex justify-content-end">
                <button type="button" class="btn btn-primary" onclick="saveAction()">Guardar Acción</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
            </div>
            <div class="modal-body">
                <div id="actionFormContainer"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}