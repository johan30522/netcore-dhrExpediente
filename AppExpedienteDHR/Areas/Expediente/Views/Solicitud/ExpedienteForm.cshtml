@using AppExpedienteDHR.Core.ViewModels.Dhr
@model ExpedienteViewModel

@{
    Layout = "~/Areas/Expediente/Views/Shared/_LayoutExpediente.cshtml";
    var errorMessage = TempData["ErrorMessage"] as string;
    var expedienteId = Model.Id;
    var lockRecordId = Model.LockedRecordId;
    var isEditMode = Model.IsEdit;
    var FlowId = Model.FlowWfId;
    var CurrentStateId = Model.StateWfId;
    var flowHeaderId = Model.FlowHeaderWfId;

    ViewData["requestType"] = "Expediente";

}

<link rel="stylesheet" href="~/css/expedienteForm.css">
<link rel="stylesheet" href="~/css/workflow.css">
<link rel="stylesheet" href="~/css/denunciaForm.css">
<link rel="stylesheet" href="~/css/file-upload.css">

<link href="~/lib/quilljs/dist/css/quill.snow.css" rel="stylesheet">


<div class="container">
    <div class="header-container mb-4 p-3 rounded shadow-sm">
        @if (Model.Id == 0)
        {
            <h2 class="header-title text-center">Nuevo Expediente</h2>
        }
        else
        {
            <h2 class="header-title text-center">@Model.FlowWfName</h2>
            <p class="header-subtitle">
                <strong>Fecha de Creación:</strong> @Model.CreatedDate?.ToString("dd/MM/yyyy")<br />
                <strong>Estado Actual:</strong> @Model.StateWfName
            </p>
        }
    </div>
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @errorMessage
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    <div class="row">
        <div class="col-12 border border-light rounded p-2">
            <form asp-area="Expediente" asp-controller="Solicitud" asp-action="Save" method="post" id="formExpediente">
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="LockedRecordId" />
                <div class="row d-flex  justify-content-end mb-2">
                    <div class="col-6 mt-4 d-flex  justify-content-end">
                        @if (Model.IsEdit)
                        {
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Guardar
                            </button>
                            <!-- Botón para abrir el modal de acciones disponibles -->
                            @if (Model.Id != 0)
                            {
                                <button type="button" class="btn btn-success ms-2" data-bs-toggle="modal" data-bs-target="#modalSeleccionarAccion">
                                    <i class="fas fa-tasks"></i> Acciones
                                </button>
                            }
                        }
                        else
                        {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-warning">
                                <i class="fas fa-edit"></i> Editar
                            </a>
                        }
                        @if (Model.Id != 0)
                        {
                            <button type="button" class="btn btn-info ms-1" data-bs-toggle="modal" data-bs-target="#flowHistoryModal" onclick="loadFlowHistory(@flowHeaderId)">
                                <i class="fas fa-history"></i> Historial
                            </button>
                        }
                        <button type="button" id="btnBack" class="btn btn-secondary ms-1"><i class="fas fa-arrow-left"></i>Volver</button>

                    </div>
                </div>
                <div class="row">
                    <!-- Pestañas Verticales -->
                    <div class="col-md-3">
                        <div class="nav flex-column nav-pills" id="v-pills-tab" role="tablist" aria-orientation="vertical">
                            <a class="nav-link active" id="v-pills-general-tab" data-bs-toggle="pill" href="#v-pills-general" role="tab" aria-controls="v-pills-general" aria-selected="true">Datos Generales</a>
                            <a class="nav-link" id="v-pills-denunciante-tab" data-bs-toggle="pill" href="#v-pills-denunciante" role="tab" aria-controls="v-pills-denunciante" aria-selected="false">Denunciante</a>
                            <a class="nav-link" id="v-pills-persona-afectada-tab" data-bs-toggle="pill" href="#v-pills-persona-afectada" role="tab" aria-controls="v-pills-persona-afectada" aria-selected="false">Persona Afectada</a>
                            <a class="nav-link" id="v-pills-tipologia-tab" data-bs-toggle="pill" href="#v-pills-tipologia" role="tab" aria-controls="v-pills-tipologia" aria-selected="false">Tipología</a>
                            <a class="nav-link" id="v-pills-anexo-tab" data-bs-toggle="pill" href="#v-pills-anexo" role="tab" aria-controls="v-pills-anexo" aria-selected="false">Anexos</a>
                        </div>
                    </div>

                    <!-- Contenido de las Pestañas -->
                    <div class="col-md-9">
                        <div class="tab-content" id="v-pills-tabContent">
                            <!-- Sección de Datos Generales -->
                            <div class="tab-pane fade show active" id="v-pills-general" role="tabpanel" aria-labelledby="v-pills-general-tab">
                                <partial name="/Areas/Expediente/Views/Shared/_DatosDenunciaPartial.cshtml" model="Model" />
                            </div>

                            <!-- Sección del Denunciante -->
                            <div class="tab-pane fade" id="v-pills-denunciante" role="tabpanel" aria-labelledby="v-pills-denunciante-tab">
                                <partial name="/Areas/Expediente/Views/Shared/_DenunciantePartial.cshtml" model="Model" />
                            </div>

                            <!-- Sección de Persona Afectada -->
                            <div class="tab-pane fade" id="v-pills-persona-afectada" role="tabpanel" aria-labelledby="v-pills-persona-afectada-tab">
                                <partial name="/Areas/Expediente/Views/Shared/_PersonaAfectadaPartial.cshtml" model="Model" />
                            </div>
                            <!-- Tipologia -->
                            <div class="tab-pane fade" id="v-pills-tipologia" role="tabpanel" aria-labelledby="v-pills-tipologia-tab">
                                <partial name="/Areas/Expediente/Views/Shared/_TipologiaPartial.cshtml" model="Model" />
                            </div>
                            <!-- Anexo -->
                            <div class="tab-pane fade" id="v-pills-anexo" role="tabpanel" aria-labelledby="v-pills-anexo-tab">
                                <partial name="/Areas/Expediente/Views/Shared/_AnexoModal.cshtml" model="Model" />
                                <partial name="/Areas/Expediente/Views/Shared/_Anexos.cshtml" model="Model" />
                            </div>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>


    <partial name="~/Areas/General/Views/Shared/_WorkFlowActionsPartial.cshtml" for="@flowHeaderId" />
    <partial name="~/Areas/General/Views/Shared/_WorkFlowHistory.cshtml" />



    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
            <script src="~/js/lockRecord.js"></script>
            <script src="~/js/flow/workflowSolictud.js"></script>
            <script src="~/js/dhr/denuncia.js"></script>
            <script src="~/js/file-upload.js"></script>
            <script src="~/js/dhr/asignacionTipologia.js"></script>
            <script src="~/lib/tabulator/dist/js/tabulator.min.js"></script>
            <script src="~/lib/tinymce/js/tinymce/tinymce.min.js"></script>
            <script src="~/js/dhr/expediente.js"></script>
        }
        <script>
            const expedienteId = '@expedienteId';
            const lockRecordId = '@lockRecordId';
            const isEditMode = @isEditMode.ToString().ToLower();


            console.log(`is edit mode ${isEditMode}`);


            if (!expedienteId) { // si no tiene expedienteId
                // Deshabilitar los campos de la denuncia si no está en modo edición
                limpiarCamposPersonaAfectada();
            } else {
                // carga los campos de canton y distrito segun seleccion
                var provinciaSeleccionada = "@(Model.Denunciante?.ProvinciaCodigo)";
                var cantonSeleccionado = "@(Model.Denunciante?.CantonCodigo)";
                var distritoSeleccionado = "@(Model.Denunciante?.DistritoCodigo)";


                if (provinciaSeleccionada) {
                    cargarCantonesYDistritos(provinciaSeleccionada, cantonSeleccionado, distritoSeleccionado);
                }
                //carga los descriptores asociados
                var eventoSeleccionado = "@(Model.EventoId)";
                var selectedDescriptorId = "@(Model.DescriptorId)";
                loadDescriptors(eventoSeleccionado).then(() => selectDescriptors(selectedDescriptorId, isEditMode));

            }
            //Inicializa el manejo de bloqueos de registro
            // si  tiene un expedienteId y esta en modo edición
            if (isEditMode && expedienteId !== '0') {
                console.log("Iniciando bloqueo de registro");
                initLockRecord(lockRecordId);
            }

            // Verificar si la página se está accediendo a través del historial (por ejemplo, al hacer clic en "Atrás")
            if (performance.navigation.type === 2) {
                location.reload(true); // Forzar recarga de la página desde el servidor
            }

            //Cuando el documento esta listo
            $(document).ready(function () {
                // inicializa las acciones disponibles de workflow
                $('#modalSeleccionarAccion').on('show.bs.modal', function (event) {

                    // Asumimos que estos valores (flowId y currentStateId) se obtienen de tu vista actual
                    console.log("Cargar acciones disponibles");
                    const flowId = '@FlowId';
                    const currentStateId = '@CurrentStateId';
                    // Llamar a la función de carga de acciones dinámicamente cuando se abra el modal
                    cargarAccionesDisponibles(flowId, currentStateId);
                });


                // se inicializa el editor de texto
                tinymce.init({
                    selector: '#Petitoria, #Detalle',
                    plugins: 'lists link',
                    toolbar: 'bold italic underline | bullist numlist | link',
                    license_key: 'gpl', // Aceptación de la licencia GPL para la versión gratuita
                    readonly: !isEditMode, // true si no está en modo edición
                    setup: function (editor) {
                        editor.on('init', function () {
                            // Buscar y ocultar el botón de "Upgrade" en el editor
                            const upgradeButton = document.querySelector('.tox-statusbar__upgrade');
                            if (upgradeButton) {
                                upgradeButton.style.display = 'none';
                            }
                        });
                    }

                });

            });


            function guardarAnexo() {
                console.log('Guardando anexo...')


                var fileInput = document.getElementById("fileInput");

                // Verificar si se ha seleccionado un archivo
                if (fileInput.files.length === 0) {
                    // Mostrar alerta con SweetAlert si no hay archivos seleccionados
                    Swal.fire({
                        icon: 'warning',
                        title: 'No hay archivos',
                        text: 'Debe seleccionar al menos un archivo antes de guardar.',
                        confirmButtonText: 'Aceptar'
                    });
                    return; // Detener la función si no hay archivo seleccionado
                }

                var formData = new FormData();
                formData.append('file', fileInput.files[0]); // Asegúrate de que 'file' coincide con el nombre en el controlador
                formData.append('id', "@(Model.Id)"); // Añadir el ID de la denuncia

                $.ajax({
                    url: '/Expediente/Solicitud/AgregarAnexo', // Ruta del controlador para agregar anexos
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        location.reload(); // Recargar la página después de guardar el anexo
                    },
                    error: function (error) {
                        alert('Error al agregar el anexo');
                    }
                });
            }

            function eliminarAnexo(id) {
                if (confirm("¿Está seguro de que desea eliminar este anexo?")) {
                    $.ajax({
                        url: '/Expediente/Solicitud/EliminarAnexo', // Ruta del controlador para eliminar anexos
                        type: 'POST',
                        data: { anexoId: id },
                        success: function (response) {
                            location.reload(); // Recargar la página después de eliminar el anexo
                        },
                        error: function (error) {
                            alert('Error al eliminar el anexo');
                        }
                    });
                }
            }

        </script>

    }
