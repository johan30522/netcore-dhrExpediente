@using AppExpedienteDHR.Core.ViewModels.Dhr
@model DenunciaViewModel

@{
}
<link rel="stylesheet" href="~/css/denunciaForm.css">
<link rel="stylesheet" href="~/css/file-upload.css">



<div class="container">
    <div class="row">
        <div class="col-12 border border-light rounded p-2">
            <form asp-action="Create" id="formDenuncia" method="post" enctype="multipart/form-data">
                <!-- Barra de Progreso -->
                <div class="progress mb-4">
                    <div id="progress-bar" class="progress-bar bg-info" role="progressbar" style="width: 25%;" aria-valuenow="25" aria-valuemin="0" aria-valuemax="100">Paso 1 de 4</div>
                </div>

                <!-- Asistente de pasos -->
                <div id="stepper" class="stepper">
                    <!-- Paso 1: Datos del Denunciante -->
                    <div class="step shadow-sm p-4 mb-4 bg-white rounded" id="step1">
                        <h3 class="text-center border-bottom pb-2"><strong>Paso 1</strong>: Datos del Denunciante</h3>
                       
                        @*partial de denunciante *@
                        <partial name="_DenunciantePartial" model="Model" />

                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-primary next-step shadow">Siguiente</button>
                        </div>
                    </div>

                    <!-- Paso 2: Persona Afectada -->
                    <div class="step shadow-sm p-4 mb-4 bg-white rounded" id="step2" style="display:none;">
                        <h3 class="text-center border-bottom pb-2"><strong>Paso 2</strong>: Datos de la Persona Afectada (Opcional)</h3>

                        @* partial de persona afectada *@
                        <partial name="_PersonaAfectadaPartial" model="Model" />
                       
                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-secondary prev-step shadow">Anterior</button>
                            <button type="button" class="btn btn-primary ms-2 next-step shadow">Siguiente</button>
                        </div>
                    </div>

                    <!-- Paso 3: Datos de la Denuncia -->
                    <div class="step shadow-sm p-4 mb-4 bg-white rounded" id="step3" style="display:none;">
                        <h3 class="text-center border-bottom pb-2"><strong>Paso 3</strong>: Datos de la Denuncia</h3>

                        @* partial de datos de denuncia *@
                        <partial name="_DatosDenunciaPartial" model="Model" />

                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-secondary prev-step shadow">Anterior</button>
                            <button type="button" class="btn btn-primary ms-2 next-step shadow">Siguiente</button>
                        </div>
                    </div>

                    <!-- Paso 4: Archivos Adjuntos y Términos -->
                    <div class="step shadow-sm p-4 mb-4 bg-white rounded" id="step4" style="display:none;">
                        <h3 class="text-center border-bottom pb-2"><strong>Paso 4</strong>:  Adjuntos y Aceptación de Términos</h3>

                        <div class="mb-3">
                            <div class="file-drop-area">
                                <span class="fake-btn">Arrastrar archivos o hacer clic</span>
                                <span class="file-msg">Ningún archivo seleccionado</span>
                                <input type="file" name="Files" id="fileInput" class="file-input" multiple />
                            </div>
                        </div>

                        <!-- Aquí se muestra la lista de archivos seleccionados -->
                        <ul id="fileList" class="file-list"></ul>

                        <div class="mb-3 form-check">
                            <input asp-for="AceptaTerminos" class="form-check-input @(ViewData.ModelState["AceptaTerminos"]?.Errors.Count > 0 ? "is-invalid" : "")" id="aceptaTerminosCheckbox" />
                            <label class="form-check-label" for="AceptaTerminos">
                                <strong>Acepto los Términos</strong>. El almacenamiento y tratamiento de datos personales solicitados tiene como fin único el tramitar su solicitud.
                            </label>
                            <div class="invalid-feedback">Debe aceptar los términos para continuar.</div>
                        </div>

                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-secondary prev-step shadow">Anterior</button>
                            <button type="submit" class="btn btn-success ms-2 shadow">Guardar</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        // Verificar si la página se está accediendo a través del historial (por ejemplo, al hacer clic en "Atrás")
        if (performance.navigation.type === 2) {
            location.reload(true); // Forzar recarga de la página desde el servidor
        }
    </script>
    <script src="~/js/file-upload.js"></script>
    <script src="~/js/dhr/denuncia.js"></script>
    <script>
        $(document).ready(function () {
            var currentStep = 1;
            var totalSteps = 4;

            function updateProgressBar(step) {
                var progress = (step / totalSteps) * 100;
                $('#progress-bar').css('width', progress + '%');
                $('#progress-bar').text('Paso ' + step + ' de ' + totalSteps);
            }

            // Mostrar el paso actual
            function showStep(step) {
                $('.step').hide();
                $('#step' + step).fadeIn(300);
                updateProgressBar(step);
            }

            // Navegación entre pasos
            $('.next-step').on('click', function () {
                // Validar el paso actual
                var isValid = validateCurrentStep(currentStep);

                if (isValid) {
                    if (currentStep < totalSteps) {
                        currentStep++;
                        showStep(currentStep);
                    }
                }
            });
            // Navegación entre pasos
            $('.prev-step').on('click', function () {
                if (currentStep > 1) {
                    currentStep--;
                    showStep(currentStep);
                }
            });

            // Validar el campo de Aceptar Términos y SweetAlert para confirmar el envío del formulario
            $('#formDenuncia').on('submit', function (e) {
                e.preventDefault(); // Detener el envío del formulario

                // Validar el checkbox de Acepta los Términos
                var aceptaTerminos = $('#aceptaTerminosCheckbox').is(':checked');
                if (!aceptaTerminos) {
                    $('#aceptaTerminosCheckbox').addClass('is-invalid');
                    return;
                } else {
                    $('#aceptaTerminosCheckbox').removeClass('is-invalid').addClass('is-valid');
                }

                // Mostrar el SweetAlert de confirmación
                Swal.fire({
                    title: '¿Está seguro de que desea guardar?',
                    text: "No podrá deshacer esta acción.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Sí, guardar',
                    cancelButtonText: 'No, cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Enviar el formulario si el usuario confirma
                        $('form').off('submit').submit();
                    }
                });
            });

            // Permite cambiar el mensaje de validación de email
            $.extend($.validator.messages, {
                email: "Debe ingresar una dirección válida."
            });

            showStep(currentStep);

            function validateCurrentStep(step) {

                console.log('Validating step ' + step);
                var formIsValid = true;


                if (step === 2) {
                    if ($('#incluyePersonaAfectada').is(':checked')) {
                        console.log('Validating Persona Afectada fields');
                        var personaAfectadaFields = $('.persona-afectada-field');
                        personaAfectadaFields.each(function () {
                            if (!$(this).valid()) {
                                formIsValid = false;
                            }
                        });
                    }
                } else {
                    // Validar los campos del paso actual
                    var $stepForm = $('#step' + step + ' input, #step' + step + ' select, #step' + step + ' textarea');
                    $stepForm.each(function () {
                        // if (!$(this).valid()) {
                        //     formIsValid = false;
                        // }
                        if (!$(this).valid()) {
                            $(this).addClass('is-invalid');
                            formIsValid = false;
                        } else {
                            $(this).removeClass('is-invalid').addClass('is-valid');
                        }
                    });

                }

                return formIsValid;
            }
            limpiarCamposPersonaAfectada();

        });
    </script>
}